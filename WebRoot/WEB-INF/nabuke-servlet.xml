<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		               http://www.springframework.org/schema/context 
                       http://www.springframework.org/schema/context/spring-context-3.1.xsd
                       http://www.springframework.org/schema/util
                       http://www.springframework.org/schema/util/spring-util-3.1.xsd
                       http://www.springframework.org/schema/mvc
                       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                       http://www.springframework.org/schema/tx 
                       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
	<!--解决@ResponseBody 中文乱码问题 -->
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">

  		<property name="messageConverters">

  			<list>

   				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />

    			<bean class="org.springframework.http.converter.StringHttpMessageConverter">

	    			<property name="supportedMediaTypes">
	
	     				<list>
	
	      					<value>text/plain;charset=UTF-8</value>
							<value>text/html;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
							
	     				</list>
	
	    			</property>

   				</bean>

   				<bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />

   				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />

    			<bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />

    			<bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />

   			</list>

 		</property>

	</bean>
	 
    <!-- 自动搜索@xx标注的类 -->
    <context:component-scan base-package="com.nabuke" />
	<mvc:annotation-driven />
	<!--去掉就能解决@ResponseBody 乱码问题 但增加参数的controller就有问题
	<mvc:annotation-driven />
	-->
	<!--
	<mvc:default-servlet-handler />
	<mvc:view-controller path="/" view-name="login" />
	<mvc:resources mapping="/resource/**" location="/resource/" />
	-->
	<!--启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!--
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	-->

	<beans:bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />
	<!-- 国际化 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:i18n/message" />
		<beans:property name="useCodeAsDefaultMessage" value="true" />
		<beans:property name="cacheSeconds" value="1" />
	</beans:bean>
	<!-- 视图解析器 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 数据库配置 -->
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:datasource.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}">
		</property>
		<property name="jdbcUrl" value="${jdbc.url}">
		</property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="20" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="180" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="60" />
	</bean>

	<!-- ibatis配置 -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>/WEB-INF/SqlMapConfig.xml</value>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<!-- 定义事务管理器（声明式的事务） -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>  
    
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
